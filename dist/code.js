(()=>{"use strict";function e(e,t){switch(e){case"COLOR":return"color";case"FLOAT":return"number"==typeof t?"number":"string"==typeof t&&(t.endsWith("px")||t.endsWith("rem")||t.endsWith("em")||t.endsWith("%"))?"dimension":"number";case"STRING":return"string";case"BOOLEAN":return"boolean";default:return"number"==typeof t?"number":"string"==typeof t?t.startsWith("#")||t.startsWith("rgb")?"color":t.match(/\d+(\.\d+)?(px|rem|em|%)/)?"dimension":t.startsWith("{")&&t.endsWith("}")?"reference":"string":"boolean"==typeof t?"boolean":"string"}}function t(e,t,n=""){const o={$value:e,$type:t};return n&&(o.$description=n),o}function n(e,t,o,r){if(null==e)return null;if("object"==typeof e&&("VARIABLE_ALIAS"===e.type||"VARIABLE_REFERENCE"===e.type))return function(e,t,n){if(!e||"object"!=typeof e)return e;if(("VARIABLE_ALIAS"===e.type||"VARIABLE_REFERENCE"===e.type)&&e.id){const o=t.find((t=>t.id===e.id));if(o){const t=o.name;return e.id&&t&&n.set(e.id,t),`{${t}}`}}return e}(e,o,r);if("object"==typeof e&&"r"in e&&"g"in e&&"b"in e)return function(e){const t=Math.round(255*e.r).toString(16).padStart(2,"0"),n=Math.round(255*e.g).toString(16).padStart(2,"0"),o=Math.round(255*e.b).toString(16).padStart(2,"0");return"a"in e&&void 0!==e.a&&1!==e.a?`#${t}${n}${o}${Math.round(255*e.a).toString(16).padStart(2,"0")}`:`#${t}${n}${o}`}(e);if(Array.isArray(e))return e.map((e=>n(e,t,o,r)));if("object"==typeof e&&null!==e){if(0===Object.keys(e).length)return"{}";const i={};for(const s in e)i[s]=n(e[s],t,o,r);return i}return e}function o(){return o=this,r=void 0,s=function*(){try{console.log("Starting DTCG-compliant variable extraction");const o=yield figma.variables.getLocalVariableCollections();console.log("Collections found:",o.length);const r=figma.variables.getLocalVariables(),i=new Map,s={};for(const a of o){const o=a.name.toLowerCase();console.log("Processing collection:",o),s[o]={};const c=r.filter((e=>e.variableCollectionId===a.id));console.log(`Found ${c.length} variables in collection ${o}`);for(const l of a.modes){const a=l.name;console.log(`Processing mode: ${a}`),s[o][a]={};for(const f of c){const c=f.valuesByMode[l.modeId];if(void 0===c)continue;const u=f.name.split("/").filter((e=>e.trim().length>0)),g=u.length>0?u:["base"],d=n(c,f.resolvedType,r,i),p=t(d,e(f.resolvedType,d),"");let y=s[o][a];for(let e=0;e<g.length-1;e++){const t=g[e];y[t]||(y[t]={}),y=y[t]}y[g[g.length-1]]=p}}}console.log("Validating references...");const a=function(e,t){const n=JSON.parse(JSON.stringify(e));function o(e,t){const n=t.split("/");let o=e;for(const e of n){if(!o[e])return!1;o=o[e]}return!0}return function e(r){if(r&&"object"==typeof r)if(Array.isArray(r))r.forEach((t=>e(t)));else for(const i in r){const s=r[i];if(!i.startsWith("$")||"$value"===i)if("$value"===i&&"string"==typeof s&&s.startsWith("{")&&s.endsWith("}")){const e=s.substring(1,s.length-1);if(!o(n,e)){console.warn(`Reference not found: ${e}`);for(const[n,o]of t.entries())if(o.endsWith(e)||e.endsWith(o)){const e=`{${o}}`;console.log(`Replacing ${s} with ${e}`),r[i]=e;break}}void 0===r.$type&&(r.$type="reference")}else"object"==typeof s&&null!==s&&e(s)}}(n),n}(s,i);return console.log("DTCG-compliant extraction finished"),a}catch(e){throw console.error("Error in extractDTCGVariables:",e),e}},new((i=void 0)||(i=Promise))((function(e,t){function n(e){try{c(s.next(e))}catch(e){t(e)}}function a(e){try{c(s.throw(e))}catch(e){t(e)}}function c(t){var o;t.done?e(t.value):(o=t.value,o instanceof i?o:new i((function(e){e(o)}))).then(n,a)}c((s=s.apply(o,r||[])).next())}));var o,r,i,s}let r=!0;figma.showUI(__html__,{width:600,height:700}),console.log("Plugin UI shown"),figma.ui.onmessage=e=>{return t=void 0,n=void 0,s=function*(){if(console.log("Plugin received message from UI:",e.type),"ui-ready"===e.type){if(console.log("UI is ready, sending data"),r){r=!1;try{const e=yield o();console.log("Extracted DTCG-compliant tokens, sending to UI"),figma.ui.postMessage({type:"tokens-data",data:e})}catch(e){console.error("Error extracting tokens:",e),figma.ui.postMessage({type:"error",message:`Error extracting tokens: ${e instanceof Error?e.message:"Unknown error"}`})}}}else if("extract-tokens"===e.type)try{const e=yield o();console.log("Extracted tokens on demand, sending to UI"),figma.ui.postMessage({type:"tokens-data",data:e})}catch(e){console.error("Error extracting tokens:",e),figma.ui.postMessage({type:"error",message:`Error extracting tokens: ${e instanceof Error?e.message:"Unknown error"}`})}else"close"===e.type&&figma.closePlugin()},new((i=void 0)||(i=Promise))((function(e,o){function r(e){try{c(s.next(e))}catch(e){o(e)}}function a(e){try{c(s.throw(e))}catch(e){o(e)}}function c(t){var n;t.done?e(t.value):(n=t.value,n instanceof i?n:new i((function(e){e(n)}))).then(r,a)}c((s=s.apply(t,n||[])).next())}));var t,n,i,s}})();
(()=>{"use strict";({383:function(){var e=this&&this.__awaiter||function(e,t,o,n){return new(o||(o=Promise))((function(r,i){function s(e){try{l(n.next(e))}catch(e){i(e)}}function a(e){try{l(n.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(s,a)}l((n=n.apply(e,t||[])).next())}))};function t(e,t){switch(e){case"COLOR":return"color";case"FLOAT":return"number"==typeof t?"number":"string"==typeof t&&(t.endsWith("px")||t.endsWith("rem")||t.endsWith("em")||t.endsWith("%"))?"dimension":"number";case"STRING":return"string";case"BOOLEAN":return"boolean";default:return"number"==typeof t?"number":"string"==typeof t?t.startsWith("#")||t.startsWith("rgb")?"color":t.match(/\d+(\.\d+)?(px|rem|em|%)/)?"dimension":t.startsWith("{")&&t.endsWith("}")?"reference":"string":"boolean"==typeof t?"boolean":"string"}}function o(e,t,o=""){const n={$value:e,$type:t};return o&&(n.$description=o),n}const n=new Map;function r(e,t,o,i){if(null==e)return null;if("object"==typeof e&&("VARIABLE_ALIAS"===e.type||"VARIABLE_REFERENCE"===e.type))return function(e,t,o){if(!e||"object"!=typeof e)return e;if(("VARIABLE_ALIAS"===e.type||"VARIABLE_REFERENCE"===e.type)&&e.id){const r=t.find((t=>t.id===e.id));if(r){const t=r.name;return e.id&&t&&(o.set(e.id,t),n.set(e.id,t)),`{${t}}`}}return e}(e,o,i);if("object"==typeof e&&"r"in e&&"g"in e&&"b"in e){const t=Math.round(255*e.r).toString(16).padStart(2,"0"),o=Math.round(255*e.g).toString(16).padStart(2,"0"),n=Math.round(255*e.b).toString(16).padStart(2,"0");return"a"in e&&1!==e.a?`#${t}${o}${n}${Math.round(255*e.a).toString(16).padStart(2,"0")}`:`#${t}${o}${n}`}if(Array.isArray(e))return e.map((e=>r(e,t,o,i)));if("object"==typeof e&&null!==e){if(0===Object.keys(e).length)return"{}";const n={};for(const s in e)n[s]=r(e[s],t,o,i);return n}return e}function i(){return e(this,void 0,void 0,(function*(){try{console.log("Starting DTCG-compliant variable extraction");const e=yield figma.variables.getLocalVariableCollections();console.log("Collections found:",e.length);const n=figma.variables.getLocalVariables(),i=new Map,s={};for(const a of e){const e=a.name.toLowerCase();console.log("Processing collection:",e),s[e]={};const l=n.filter((e=>e.variableCollectionId===a.id));console.log(`Found ${l.length} variables in collection ${e}`);for(const c of a.modes){const a=c.name;console.log(`Processing mode: ${a}`),s[e][a]={};for(const f of l){const l=f.valuesByMode[c.modeId];if(void 0===l)continue;const d=f.name.split("/").filter((e=>e.trim().length>0)),g=d.length>0?d:["base"],u=r(l,f.resolvedType,n,i),p=o(u,t(f.resolvedType,u),"");let m=s[e][a];for(let e=0;e<g.length-1;e++){const t=g[e];m[t]||(m[t]={}),m=m[t]}m[g[g.length-1]]=p}}}console.log("Validating references...");const a=function(e,t){const o=JSON.parse(JSON.stringify(e)),n=[];function r(e,t){const o=t.split("/");let n=e;for(const e of o){if(!n[e])return!1;n=n[e]}return!0}return function e(i,s=""){if(i&&"object"==typeof i)if(Array.isArray(i))i.forEach((t=>e(t)));else for(const a in i){const l=i[a],c=s?`${s}/${a}`:a;if(!a.startsWith("$")||"$value"===a)if("$value"===a&&"string"==typeof l&&l.startsWith("{")&&l.endsWith("}")){const e=l.substring(1,l.length-1);if(!r(o,e)){console.warn(`Reference not found: ${e} at ${s}`);let o=!1;for(const[n,r]of t.entries())if(r.endsWith(e)||e.endsWith(r)){const e=`{${r}}`;console.log(`Replacing ${l} with ${e}`),i[a]=e,o=!0;break}o||n.push({path:s,reference:e,message:`Reference '${e}' not found in tokens`})}void 0===i.$type&&(i.$type="reference")}else"object"==typeof l&&null!==l&&e(l,c)}}(o),{tokens:o,problems:n}}(s,i);return console.log("DTCG-compliant extraction finished"),{tokens:a.tokens,validationProblems:a.problems}}catch(e){throw console.error("Error in extractDTCGVariables:",e),e}}))}figma.showUI(__html__,{width:600,height:700}),console.log("Plugin UI shown");let s=!0;figma.ui.onmessage=t=>e(void 0,void 0,void 0,(function*(){if(console.log("Plugin received message from UI:",t.type),"ui-ready"===t.type){if(console.log("UI is ready, sending data"),s){s=!1;try{const e=yield i();console.log("Extracted DTCG-compliant tokens, sending to UI"),console.log("Validation problems:",e.validationProblems.length),figma.ui.postMessage({type:"tokens-data",data:e.tokens,validationProblems:e.validationProblems})}catch(e){console.error("Error extracting tokens:",e),figma.ui.postMessage({type:"error",message:`Error extracting tokens: ${e instanceof Error?e.message:"Unknown error"}`})}}}else if("extract-tokens"===t.type)try{const e=yield i();console.log("Extracted tokens on demand, sending to UI"),figma.ui.postMessage({type:"tokens-data",data:e.tokens,validationProblems:e.validationProblems})}catch(e){console.error("Error extracting tokens:",e),figma.ui.postMessage({type:"error",message:`Error extracting tokens: ${e instanceof Error?e.message:"Unknown error"}`})}else if("validate-references"===t.type)try{const e=yield i();figma.ui.postMessage({type:"validation-result",validationProblems:e.validationProblems})}catch(e){console.error("Error validating references:",e),figma.ui.postMessage({type:"error",message:`Error validating references: ${e instanceof Error?e.message:"Unknown error"}`})}else"close"===t.type&&figma.closePlugin()}))}})[383]()})();
(()=>{"use strict";function t(t,e){switch(t){case"COLOR":return"color";case"FLOAT":return"number"==typeof e?"number":"string"==typeof e&&(e.endsWith("px")||e.endsWith("rem")||e.endsWith("em")||e.endsWith("%"))?"dimension":"number";case"STRING":return"string";case"BOOLEAN":return"boolean";default:return"number"==typeof e?"number":"string"==typeof e?e.startsWith("#")||e.startsWith("rgb")?"color":e.match(/\d+(\.\d+)?(px|rem|em|%)/)?"dimension":e.startsWith("{")&&e.endsWith("}")?"reference":"string":"boolean"==typeof e?"boolean":"string"}}function e(t,e,n=""){const o={$value:t,$type:e};return n&&(o.$description=n),o}function n(t,e,o,r){if(null==t)return null;if("object"==typeof t&&("VARIABLE_ALIAS"===t.type||"VARIABLE_REFERENCE"===t.type))return function(t,e,n){if(!t||"object"!=typeof t)return t;if(("VARIABLE_ALIAS"===t.type||"VARIABLE_REFERENCE"===t.type)&&t.id){const o=e.find((e=>e.id===t.id));if(o){const e=o.name;return t.id&&e&&n.set(t.id,e),`{${e}}`}}return t}(t,o,r);if("object"==typeof t&&"r"in t&&"g"in t&&"b"in t)return function(t){const e=Math.round(255*t.r).toString(16).padStart(2,"0"),n=Math.round(255*t.g).toString(16).padStart(2,"0"),o=Math.round(255*t.b).toString(16).padStart(2,"0");return"a"in t&&void 0!==t.a&&1!==t.a?`#${e}${n}${o}${Math.round(255*t.a).toString(16).padStart(2,"0")}`:`#${e}${n}${o}`}(t);if(Array.isArray(t))return t.map((t=>n(t,e,o,r)));if("object"==typeof t&&null!==t){if(0===Object.keys(t).length)return"{}";const i={};for(const a in t)i[a]=n(t[a],e,o,r);return i}return t}function o(){return o=this,r=void 0,a=function*(){try{console.log("Starting DTCG-compliant variable extraction");const o=yield figma.variables.getLocalVariableCollections();console.log("Collections found:",o.length);const r=figma.variables.getLocalVariables(),i=new Map,a={};for(const s of o){const o=s.name.toLowerCase();console.log("Processing collection:",o),a[o]={};const c=r.filter((t=>t.variableCollectionId===s.id));console.log(`Found ${c.length} variables in collection ${o}`);for(const l of s.modes){const s=l.name;console.log(`Processing mode: ${s}`),a[o][s]={};for(const u of c){const c=u.valuesByMode[l.modeId];if(void 0===c)continue;const f=u.name.split("/").filter((t=>t.trim().length>0)),g=f.length>0?f:["base"],d=n(c,u.resolvedType,r,i),h=e(d,t(u.resolvedType,d),"");let p=a[o][s];for(let t=0;t<g.length-1;t++){const e=g[t];p[e]||(p[e]={}),p=p[e]}p[g[g.length-1]]=h}}}console.log("Validating references...");const s=function(t,e){const n=JSON.parse(JSON.stringify(t));function o(t,e){const n=e.split("/");let o=t;for(const t of n){if(!o[t])return!1;o=o[t]}return!0}return function t(r){if(r&&"object"==typeof r)if(Array.isArray(r))r.forEach((e=>t(e)));else for(const i in r){const a=r[i];if(!i.startsWith("$")||"$value"===i)if("$value"===i&&"string"==typeof a&&a.startsWith("{")&&a.endsWith("}")){const t=a.substring(1,a.length-1);if(!o(n,t)){console.warn(`Reference not found: ${t}`);for(const[n,o]of e.entries())if(o.endsWith(t)||t.endsWith(o)){const t=`{${o}}`;console.log(`Replacing ${a} with ${t}`),r[i]=t;break}}void 0===r.$type&&(r.$type="reference")}else"object"==typeof a&&null!==a&&t(a)}}(n),n}(a,i);return console.log("DTCG-compliant extraction finished"),s}catch(t){throw console.error("Error in extractDTCGVariables:",t),t}},new((i=void 0)||(i=Promise))((function(t,e){function n(t){try{c(a.next(t))}catch(t){e(t)}}function s(t){try{c(a.throw(t))}catch(t){e(t)}}function c(e){var o;e.done?t(e.value):(o=e.value,o instanceof i?o:new i((function(t){t(o)}))).then(n,s)}c((a=a.apply(o,r||[])).next())}));var o,r,i,a}function r({r:t,g:e,b:n,a:o=1}){const r=Math.round(255*t),i=Math.round(255*e),a=Math.round(255*n);return void 0!==o&&o<1?`rgba(${r}, ${i}, ${a}, ${o.toFixed(2)})`:`rgb(${r}, ${i}, ${a})`}function i({r:t,g:e,b:n,a:o=1}){var r;const i=function({r:t,g:e,b:n,a:o=1}){const r=t,i=e,a=n,s=Math.max(r,i,a),c=Math.min(r,i,a),l=s-c;let u=0,f=0,g=(s+c)/2;if(0!==l)switch(f=g>.5?l/(2-s-c):l/(s+c),s){case r:u=60*((i-a)/l+(i<a?6:0));break;case i:u=60*((a-r)/l+2);break;case a:u=60*((r-i)/l+4)}return{h:u,s:100*f,l:100*g,a:o}}({r:t,g:e,b:n,a:o});return void 0!==o&&o<1?`hsla(${Math.round(i.h)}deg, ${Math.round(i.s)}%, ${Math.round(i.l)}%, ${null===(r=i.a)||void 0===r?void 0:r.toFixed(2)})`:`hsl(${Math.round(i.h)}deg, ${Math.round(i.s)}%, ${Math.round(i.l)}%)`}function a(t,e){if("string"==typeof t){if(t.startsWith("#")){const n=function(t){3===(t=t.replace("#","")).length&&(t=t[0]+t[0]+t[1]+t[1]+t[2]+t[2]);let e=1;8===t.length&&(e=parseInt(t.slice(6,8),16)/255,t=t.substring(0,6));const n=parseInt(t,16);return{r:(n>>16&255)/255,g:(n>>8&255)/255,b:(255&n)/255,a:e}}(t);switch(e){case"hex":return t;case"rgb":case"rgba":return r(n);case"hsl":case"hsla":return i(n)}}return t}if("object"==typeof t&&"r"in t&&"g"in t&&"b"in t)switch(e){case"hex":default:return function({r:t,g:e,b:n,a:o=1}){const r=Math.round(255*t).toString(16).padStart(2,"0"),i=Math.round(255*e).toString(16).padStart(2,"0"),a=Math.round(255*n).toString(16).padStart(2,"0");return void 0!==o&&o<1?`#${r}${i}${a}${Math.round(255*o).toString(16).padStart(2,"0")}`:`#${r}${i}${a}`}(t);case"rgb":case"rgba":return r(t);case"hsl":case"hsla":return i(t)}return t}let s=!0,c="hex";figma.showUI(__html__,{width:600,height:700}),console.log("Plugin UI shown"),figma.ui.onmessage=t=>{return e=void 0,n=void 0,i=function*(){if(console.log("Plugin received message from UI:",t.type),"ui-ready"===t.type){if(console.log("UI is ready, sending data"),s){s=!1;try{const t=yield o();console.log("Extracted DTCG-compliant tokens, sending to UI"),figma.ui.postMessage({type:"tokens-data",data:t})}catch(t){console.error("Error extracting tokens:",t),figma.ui.postMessage({type:"error",message:`Error extracting tokens: ${t instanceof Error?t.message:"Unknown error"}`})}}}else if("extract-tokens"===t.type)try{const t=yield o();console.log("Extracted tokens on demand, sending to UI"),figma.ui.postMessage({type:"tokens-data",data:t})}catch(t){console.error("Error extracting tokens:",t),figma.ui.postMessage({type:"error",message:`Error extracting tokens: ${t instanceof Error?t.message:"Unknown error"}`})}else if("apply-color-format"===t.type){if(t.colorFormat){c=t.colorFormat,console.log(`Color format set to: ${c}`);try{const t=function(t,e){const n=JSON.parse(JSON.stringify(t));function o(t){if(t&&"object"==typeof t&&void 0!==t.$value)return"color"===t.$type&&(t.$value=a(t.$value,e)),t;if(t&&"object"==typeof t&&!Array.isArray(t))for(const e in t)t[e]=o(t[e]);return t}for(const t in n)for(const e in n[t])n[t][e]=o(n[t][e]);return n}(yield o(),c);figma.ui.postMessage({type:"tokens-data",data:t})}catch(t){console.error("Error applying color format:",t),figma.ui.postMessage({type:"error",message:`Error applying color format: ${t instanceof Error?t.message:"Unknown error"}`})}}}else"close"===t.type&&figma.closePlugin()},new((r=void 0)||(r=Promise))((function(t,o){function a(t){try{c(i.next(t))}catch(t){o(t)}}function s(t){try{c(i.throw(t))}catch(t){o(t)}}function c(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(t){t(n)}))).then(a,s)}c((i=i.apply(e,n||[])).next())}));var e,n,r,i}})();
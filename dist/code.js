(()=>{"use strict";function e(e){const t=Math.round(255*e.r).toString(16).padStart(2,"0"),r=Math.round(255*e.g).toString(16).padStart(2,"0"),n=Math.round(255*e.b).toString(16).padStart(2,"0");return"a"in e&&void 0!==e.a&&1!==e.a?`#${t}${r}${n}${Math.round(255*e.a).toString(16).padStart(2,"0")}`:`#${t}${r}${n}`}function t(e,t){switch(e){case"COLOR":return"color";case"FLOAT":return"number"==typeof t?"number":"string"==typeof t&&(t.endsWith("px")||t.endsWith("rem")||t.endsWith("em")||t.endsWith("%"))?"dimension":"number";case"STRING":return"string";case"BOOLEAN":return"boolean";default:return"number"==typeof t?"number":"string"==typeof t?t.startsWith("#")||t.startsWith("rgb")?"color":t.match(/\d+(\.\d+)?(px|rem|em|%)/)?"dimension":t.startsWith("{")&&t.endsWith("}")?"reference":"string":"boolean"==typeof t?"boolean":"string"}}function r(e,t,r=""){const n={$value:e,$type:t};return r&&(n.$description=r),n}function n({r:e,g:t,b:r,a:n=1}){const o=Math.round(255*e),s=Math.round(255*t),a=Math.round(255*r);return void 0!==n&&n<1?`rgba(${o}, ${s}, ${a}, ${n.toFixed(2)})`:`rgb(${o}, ${s}, ${a})`}function o({r:e,g:t,b:r,a:n=1}){var o;const s=function({r:e,g:t,b:r,a:n=1}){const o=Math.max(e,t,r),s=Math.min(e,t,r),a=o-s;let i=0,l=0,c=(o+s)/2;if(0!==a)switch(l=c>.5?a/(2-o-s):a/(o+s),o){case e:i=60*((t-r)/a+(t<r?6:0));break;case t:i=60*((r-e)/a+2);break;case r:i=60*((e-t)/a+4)}return{h:i,s:100*l,l:100*c,a:n}}({r:e,g:t,b:r,a:n});return void 0!==n&&n<1?`hsla(${Math.round(s.h)}deg, ${Math.round(s.s)}%, ${Math.round(s.l)}%, ${null===(o=s.a)||void 0===o?void 0:o.toFixed(2)})`:`hsl(${Math.round(s.h)}deg, ${Math.round(s.s)}%, ${Math.round(s.l)}%)`}function s(e,t,r=new Set){if(!e||"string"!=typeof e)return{value:e,type:"unknown",isResolved:!1};if(!e.startsWith("{")||!e.endsWith("}"))return{value:e,type:"unknown",isResolved:!1};const n=e.substring(1,e.length-1);if(r.has(n))return console.warn(`Circular reference detected: ${n}`),{value:e,type:"reference",originalReference:e,isResolved:!1};if(r.add(n),t[n]){const o=t[n];if("string"==typeof o.value&&o.value.startsWith("{")&&o.value.endsWith("}")){const a=s(o.value,t,r);return Object.assign(Object.assign({},a),{originalReference:e,originalPath:o.originalPath,resolvedFrom:n})}return{value:o.value,type:o.type,originalReference:e,originalPath:o.originalPath,isResolved:!0,resolvedFrom:n}}const o=n.includes("/")?n.replace(/\//g,"."):n.replace(/\./g,"/");if(t[o]){const n=t[o];if("string"==typeof n.value&&n.value.startsWith("{")&&n.value.endsWith("}")){const a=s(n.value,t,r);return Object.assign(Object.assign({},a),{originalReference:e,originalPath:n.originalPath,resolvedFrom:o})}return{value:n.value,type:n.type,originalReference:e,originalPath:n.originalPath,isResolved:!0,resolvedFrom:o}}const a=n.split(/[\/\.]/).pop()||"";if(a!==n&&t[a]){const n=t[a];if("string"==typeof n.value&&n.value.startsWith("{")&&n.value.endsWith("}")){const o=s(n.value,t,r);return Object.assign(Object.assign({},o),{originalReference:e,originalPath:n.originalPath,resolvedFrom:a})}return{value:n.value,type:n.type,originalReference:e,originalPath:n.originalPath,isResolved:!0,resolvedFrom:a}}const i=function(e,t){const r=Object.keys(t);let n=null,o=0;const s=e.toLowerCase();for(const e of r){const t=e.toLowerCase();if(t.endsWith(s)){const r=s.length/t.length;r>o&&(n=e,o=r)}else{const r=s.split(/[\/\.]/),a=t.split(/[\/\.]/);if(r[r.length-1]===a[a.length-1]){const t=.5;t>o&&(n=e,o=t)}}}return n}(n,t);if(i){const n=t[i];if("string"==typeof n.value&&n.value.startsWith("{")&&n.value.endsWith("}")){const o=s(n.value,t,r);return Object.assign(Object.assign({},o),{originalReference:e,originalPath:n.originalPath,resolvedFrom:i})}return{value:n.value,type:n.type,originalReference:e,originalPath:n.originalPath,isResolved:!0,resolvedFrom:i}}return{value:e,type:"reference",originalReference:e,isResolved:!1}}function a(t,r,n,o){if(null==t)return null;if("object"==typeof t&&("VARIABLE_ALIAS"===t.type||"VARIABLE_REFERENCE"===t.type))return function(e,t,r){if(!e||"object"!=typeof e)return e;if(("VARIABLE_ALIAS"===e.type||"VARIABLE_REFERENCE"===e.type)&&e.id){const n=t.find((t=>t.id===e.id));if(n){const t=n.name.replace(/\//g,".");return e.id&&t&&r.set(e.id,t),`{${t}}`}}return e}(t,n,o);if("object"==typeof t&&"r"in t&&"g"in t&&"b"in t)return e(t);if(Array.isArray(t))return t.map((e=>a(e,r,n,o)));if("object"==typeof t&&null!==t){if(0===Object.keys(t).length)return"{}";const e={};for(const s in t)e[s]=a(t[s],r,n,o);return e}return t}function i(){return e=this,n=void 0,i=function*(){try{console.log("Starting DTCG-compliant variable extraction");const e=yield figma.variables.getLocalVariableCollections();console.log("Collections found:",e.length);const n=figma.variables.getLocalVariables(),o=new Map,i={};for(const s of e){const e=s.name.toLowerCase();console.log("Processing collection:",e),i[e]={};const l=n.filter((e=>e.variableCollectionId===s.id));console.log(`Found ${l.length} variables in collection ${e}`);for(const c of s.modes){const s=c.name;console.log(`Processing mode: ${s}`),i[e][s]={};for(const u of l){const l=u.valuesByMode[c.modeId];if(void 0===l)continue;const f=u.name.split("/").filter((e=>e.trim().length>0)),d=f.length>0?f:["base"],g=a(l,u.resolvedType,n,o),p=r(g,t(u.resolvedType,g),"");let h=i[e][s];for(let e=0;e<d.length-1;e++){const t=d[e];h[t]||(h[t]={}),h=h[t]}h[d[d.length-1]]=p}}}console.log("Validating references...");const l=function(e,t){const r=JSON.parse(JSON.stringify(e)),n={};if(t instanceof Map)for(const[e,r]of t.entries())n[r]={value:`{${r}}`,type:"reference"};else Object.assign(n,t);function o(e,t=""){if(e&&"object"==typeof e)if(Array.isArray(e))e.forEach(((e,r)=>o(e,`${t}[${r}]`)));else for(const r in e){const a=e[r],i=t?`${t}.${r}`:r;if(!r.startsWith("$")||"$value"===r)if("$value"===r&&"string"==typeof a&&a.startsWith("{")&&a.endsWith("}")){a.substring(1,a.length-1);const t=s(a,n);t.isResolved?(e.$originalValue=a,e.$value=t.value,e.$resolvedFrom=t.resolvedFrom,"reference"===e.$type&&t.type?e.$type=t.type:e.$type||(e.$type=t.type||"reference")):e.$type||(e.$type="reference")}else"object"==typeof a&&null!==a&&o(a,i)}}0===Object.keys(n).length&&Object.assign(n,function(e){const t={};function r(e,n="",o=""){if(e&&"object"==typeof e)if(void 0===e.$value||void 0===e.$type)for(const t in e){const s=n?`${n}/${t}`:t,a=o?`${o}.${t}`:t;"object"==typeof e[t]&&null!==e[t]&&r(e[t],s,a)}else{const r=n.replace(/\//g,".");t[r]={value:e.$value,type:e.$type,originalPath:o},t[n]={value:e.$value,type:e.$type,originalPath:o};const s=r.split(".");for(let a=s.length;a>0;a--){const i=s.slice(s.length-a).join(".");t[i]||i===r||(t[i]={value:e.$value,type:e.$type,originalPath:o});const l=s.slice(s.length-a).join("/");t[l]||l===n||(t[l]={value:e.$value,type:e.$type,originalPath:o})}const a=s[s.length-1];t[a]||(t[a]={value:e.$value,type:e.$type,originalPath:o})}}for(const t in e)for(const n in e[t])r(e[t][n],`${t}/${n}`,`${t}.${n}`),r(e[t][n],"","");return t}(e));for(const e in r)for(const t in r[e])o(r[e][t],`${e}.${t}`);return r}(i,o);return console.log("DTCG-compliant extraction finished"),l}catch(e){throw console.error("Error in extractDTCGVariables:",e),e}},new((o=void 0)||(o=Promise))((function(t,r){function s(e){try{l(i.next(e))}catch(e){r(e)}}function a(e){try{l(i.throw(e))}catch(e){r(e)}}function l(e){var r;e.done?t(e.value):(r=e.value,r instanceof o?r:new o((function(e){e(r)}))).then(s,a)}l((i=i.apply(e,n||[])).next())}));var e,n,o,i}var l=function(e,t,r,n){return new(r||(r=Promise))((function(o,s){function a(e){try{l(n.next(e))}catch(e){s(e)}}function i(e){try{l(n.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,i)}l((n=n.apply(e,t||[])).next())}))};function c(e,t,r,n){return l(this,arguments,void 0,(function*(e,t,r,n,o=""){let s=!1,a=0;const i=[];for(const l in t){const f=t[l],d=o?`${o}/${l}`:l;if(f&&"object"==typeof f&&void 0!==f.$value){const t=d,n=e.find((e=>e.name===t));if(n)try{const e="string"==typeof f.$value&&f.$value.startsWith("{")&&f.$value.endsWith("}"),o=u(f.$value,f.$type);if(null===o&&e){console.warn(`Could not resolve reference for variable ${t}: ${f.$value}`),i.push(`Could not resolve reference for ${t}: ${f.$value}`);continue}yield n.setValueForMode(r,o),e?console.log(`Updated variable with reference: ${t} â†’ ${f.$value}`):console.log(`Updated variable: ${t}`),s=!0,a++}catch(e){console.error(`Error updating variable ${t}:`,e),i.push(`Error updating ${t}: ${e instanceof Error?e.message:String(e)}`)}else console.warn(`Variable not found: ${t}`)}else if(f&&"object"==typeof f&&!Array.isArray(f)){const t=yield c(e,f,r,n,d);s=s||t.updated,a+=t.updatedCount,t.referenceErrors&&t.referenceErrors.length>0&&i.push(...t.referenceErrors)}}return{updated:s,updatedCount:a,referenceErrors:i}}))}function u(e,t){switch(t){case"color":return"string"==typeof e&&e.startsWith("{")&&e.endsWith("}")?f(e):null==(r=e)?{r:0,g:0,b:0,a:1}:"object"==typeof r&&null!==r&&"r"in r?r:"string"==typeof r&&r.startsWith("#")?function(e){try{3===(e=e.replace("#","")).length&&(e=e[0]+e[0]+e[1]+e[1]+e[2]+e[2]),4===e.length&&(e=e[0]+e[0]+e[1]+e[1]+e[2]+e[2]+e[3]+e[3]);let t=1;8===e.length&&(t=parseInt(e.slice(6,8),16)/255,e=e.substring(0,6));const r=parseInt(e.slice(0,2),16)/255,n=parseInt(e.slice(2,4),16)/255,o=parseInt(e.slice(4,6),16)/255;return isNaN(r)||isNaN(n)||isNaN(o)||isNaN(t)?(console.warn(`Invalid hex color values in: #${e}`),{r:0,g:0,b:0,a:1}):{r,g:n,b:o,a:t}}catch(t){return console.error(`Error parsing hex color: #${e}`,t),{r:0,g:0,b:0,a:1}}}(r):"string"==typeof r&&(r.startsWith("rgb(")||r.startsWith("rgba("))?function(e){try{let t=e.match(/rgba?\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)(?:\s*,\s*(\d*\.?\d+))?\s*\)/);if(t||(t=e.match(/rgba?\(\s*(\d+)\s+(\d+)\s+(\d+)(?:\s*\/\s*(\d*\.?\d+))?\s*\)/)),t||(t=e.match(/rgba?\(\s*(\d+(?:\.\d+)?)\s*[, ]\s*(\d+(?:\.\d+)?)\s*[, ]\s*(\d+(?:\.\d+)?)(?:\s*[/, ]\s*(\d*\.?\d+))?\s*\)/)),!t)return console.warn(`Failed to parse RGB color: ${e}`),{r:0,g:0,b:0,a:1};const r=parseInt(t[1],10)/255,n=parseInt(t[2],10)/255;return{r,g:n,b:parseInt(t[3],10)/255,a:void 0!==t[4]?parseFloat(t[4]):1}}catch(t){return console.error(`Error parsing RGB color: ${e}`,t),{r:0,g:0,b:0,a:1}}}(r):"string"==typeof r&&(r.startsWith("hsl(")||r.startsWith("hsla("))?function(e){try{let t=e.match(/hsla?\(\s*(\d+)(?:deg)?\s*,\s*(\d+)(?:%)\s*,\s*(\d+)(?:%)\s*(?:,\s*(\d*\.?\d+))?\s*\)/);if(t||(t=e.match(/hsla?\(\s*(\d+)(?:deg)?\s+(\d+)(?:%)\s+(\d+)(?:%)\s*(?:\/\s*(\d*\.?\d+))?\s*\)/)),t||(t=e.match(/hsla?\(\s*(\d+(?:\.\d+)?)(?:deg|rad|grad|turn)?\s*[, ]\s*(\d+(?:\.\d+)?)%?\s*[, ]\s*(\d+(?:\.\d+)?)%?(?:\s*[/, ]\s*(\d*\.?\d+))?\s*\)/)),!t)return console.warn(`Failed to parse HSL color: ${e}`),{r:0,g:0,b:0,a:1};const r=parseFloat(t[1]),n=parseFloat(t[2])/100,o=parseFloat(t[3])/100,s=void 0!==t[4]?parseFloat(t[4]):1,a=(e,t,r)=>(r<0&&(r+=1),r>1&&(r-=1),r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+(t-e)*(2/3-r)*6:e);let i,l,c;if(0===n)i=l=c=o;else{const e=o<.5?o*(1+n):o+n-o*n,t=2*o-e;i=a(t,e,(r/360+1/3)%1),l=a(t,e,r/360%1),c=a(t,e,(r/360-1/3+1)%1)}return{r:i,g:l,b:c,a:s}}catch(t){return console.error(`Error parsing HSL color: ${e}`,t),{r:0,g:0,b:0,a:1}}}(r):(console.warn(`Unrecognized color format: ${r}`),{r:0,g:0,b:0,a:1});case"number":return"string"==typeof e&&e.startsWith("{")&&e.endsWith("}")?f(e):"string"==typeof e?parseFloat(e):e;case"boolean":return"string"==typeof e&&e.startsWith("{")&&e.endsWith("}")?f(e):Boolean(e);default:return"string"==typeof e&&e.startsWith("{")&&e.endsWith("}")?f(e):e}var r}function f(e){try{const t=e.substring(1,e.length-1).replace(/\./g,"/"),r=figma.variables.getLocalVariables().find((e=>e.name===t));return r?{type:"VARIABLE_ALIAS",id:r.id}:(console.warn(`Referenced variable not found: ${t}`),null)}catch(e){return console.error("Error resolving reference to Figma alias:",e),null}}let d=!0,g="hex",p=null;figma.showUI(__html__,{width:1080,height:800}),console.log("Plugin UI shown with updated dimensions"),figma.ui.onmessage=t=>{return r=void 0,s=void 0,u=function*(){if(console.log("Plugin received message from UI:",t.type),"ui-ready"===t.type){if(console.log("UI is ready, sending data"),d){d=!1;try{const e=yield i();p=JSON.parse(JSON.stringify(e)),console.log("Extracted DTCG-compliant tokens, sending to UI"),figma.ui.postMessage({type:"tokens-data",data:e})}catch(e){console.error("Error extracting tokens:",e),figma.ui.postMessage({type:"error",message:`Error extracting tokens: ${e instanceof Error?e.message:"Unknown error"}`})}}}else if("extract-tokens"===t.type)try{const e=yield i();p=JSON.parse(JSON.stringify(e)),console.log("Extracted tokens on demand, sending to UI"),figma.ui.postMessage({type:"tokens-data",data:e})}catch(e){console.error("Error extracting tokens:",e),figma.ui.postMessage({type:"error",message:`Error extracting tokens: ${e instanceof Error?e.message:"Unknown error"}`})}else if("apply-color-format"===t.type){if(t.colorFormat){g=t.colorFormat,console.log(`Color format set to: ${g}`);try{p||(p=yield i());const t=function(t,r){const s=JSON.parse(JSON.stringify(t));function a(t){if(t&&"object"==typeof t&&void 0!==t.$value){if("color"===t.$type){if("string"==typeof t.$value&&t.$value.startsWith("{")&&t.$value.endsWith("}"))return t;t.$value=function(t,r){if("string"==typeof t){if(t.startsWith("#")){const e=function(e){3===(e=e.replace("#","")).length&&(e=e[0]+e[0]+e[1]+e[1]+e[2]+e[2]);let t=1;8===e.length&&(t=parseInt(e.slice(6,8),16)/255,e=e.substring(0,6));const r=parseInt(e,16);return{r:(r>>16&255)/255,g:(r>>8&255)/255,b:(255&r)/255,a:t}}(t);switch(r){case"hex":return t;case"rgb":case"rgba":return n(e);case"hsl":case"hsla":return o(e)}}return t}if("object"==typeof t&&"r"in t&&"g"in t&&"b"in t)switch(r){case"hex":default:return e(t);case"rgb":case"rgba":return n(t);case"hsl":case"hsla":return o(t)}return t}(t.$value,r)}return t}if(t&&"object"==typeof t&&!Array.isArray(t))for(const e in t)t[e]=a(t[e]);return t}for(const e in s)for(const t in s[e])s[e][t]=a(s[e][t]);return s}(JSON.parse(JSON.stringify(p)),g);figma.ui.postMessage({type:"tokens-data",data:t})}catch(e){console.error("Error applying color format:",e),figma.ui.postMessage({type:"error",message:`Error applying color format: ${e instanceof Error?e.message:"Unknown error"}`})}}}else if("update-variables"===t.type)try{console.log("Received update variables request");const e=yield function(e){return l(this,void 0,void 0,(function*(){try{if(console.log("Starting variable update process"),!e||"object"!=typeof e)return{success:!1,error:"Invalid JSON data provided"};const t=yield figma.variables.getLocalVariableCollections();let r=!1;const n=[];for(const o in e){console.log(`Processing collection: ${o}`);const s=t.find((e=>e.name.toLowerCase()===o.toLowerCase()));if(!s){console.warn(`Collection not found: ${o}`);continue}const a=figma.variables.getLocalVariables().filter((e=>e.variableCollectionId===s.id)),i=e[o];for(const e in i){console.log(`Processing mode: ${e}`);const t=s.modes.find((t=>t.name.toLowerCase()===e.toLowerCase()));if(!t){console.warn(`Mode not found: ${e} in collection ${o}`);continue}const l=i[e],u=yield c(a,l,t.modeId,`${o}.${e}`);r=r||u.updated,u.referenceErrors&&u.referenceErrors.length>0&&n.push(...u.referenceErrors)}}if(!r)return console.log("No variables were updated - possibly empty input"),{success:!0,error:"No variables were updated. The filter might be too restrictive or data is empty."};if(n.length>0){console.warn(`Updated variables with ${n.length} reference warnings`);const e=Array.from(new Set(n));return{success:!0,warnings:e,error:`Variables updated with ${e.length} reference warning(s). Some references couldn't be resolved.`}}return console.log("Variable update completed successfully"),{success:!0}}catch(e){return console.error("Error updating variables:",e),{success:!1,error:e instanceof Error?e.message:"Unknown error updating variables"}}}))}(t.data);figma.ui.postMessage({type:"update-variables-result",success:e.success,error:e.error,warnings:e.warnings})}catch(e){console.error("Error handling variable update:",e),figma.ui.postMessage({type:"update-variables-result",success:!1,error:`Error handling variable update: ${e instanceof Error?e.message:"Unknown error"}`})}else"close"===t.type&&figma.closePlugin()},new((a=void 0)||(a=Promise))((function(e,t){function n(e){try{i(u.next(e))}catch(e){t(e)}}function o(e){try{i(u.throw(e))}catch(e){t(e)}}function i(t){var r;t.done?e(t.value):(r=t.value,r instanceof a?r:new a((function(e){e(r)}))).then(n,o)}i((u=u.apply(r,s||[])).next())}));var r,s,a,u}})();